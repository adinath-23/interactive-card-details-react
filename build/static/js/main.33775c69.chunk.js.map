{"version":3,"sources":["components/Form/Error.js","components/Form/Form.js","images/card-logo.svg","components/Card/Front.js","components/Card/Back.js","images/icon-complete.svg","components/Complete/Complete.js","App.js","index.js","components/Form/Form.module.css","components/Card/Card.module.css","components/Form/Error.module.css","components/Complete/Complete.module.css"],"names":["Error","props","className","isValid","styles","error","noError","initialState","username","cardNumber","expMonth","expYear","cvc","usernameIsValid","cardNumberIsValid","expMonthIsValid","expYearIsValid","cvcIsValid","formReducer","state","action","type","value","length","replace","split","reduce","previousValue","currentValue","currentIndex","parseInt","Form","useReducer","formState","dispatchFormAction","usernameInputRef","useRef","cardNumberInputRef","expMonthInputRef","expYearInputRef","cvcInputRef","handleBlur","event","target","id","useEffect","submitData","onSubmit","preventDefault","onCompletion","current","focus","form","htmlFor","ref","maxLength","onChange","console","log","onBlur","placeholder","Front","src","logo","alt","data","Back","Complete","confirmed","onClick","App","useState","isComplete","setIsComplete","cardDetails","setCardDetails","handleCompletion","ReactDOM","createRoot","document","getElementById","render","module","exports"],"mappings":"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","file":"static/js/main.33775c69.chunk.js","sourcesContent":["import styles from './Error.module.css'\r\n\r\nconst Error = props => {\r\n    return (\r\n        <p className={props.isValid === false ? styles.error : styles.noError}>Incomplete</p>\r\n    )\r\n}\r\n\r\nexport default Error;","import { useEffect, useReducer, useRef } from \"react\";\r\nimport styles from './Form.module.css'\r\nimport Error from './Error'\r\n\r\nconst initialState = {\r\n    username: '',\r\n    cardNumber: '',\r\n    expMonth: '',\r\n    expYear: '',\r\n    cvc: '',\r\n    usernameIsValid: null,\r\n    cardNumberIsValid: null,\r\n    expMonthIsValid: null,\r\n    expYearIsValid: null,\r\n    cvcIsValid: null,\r\n}\r\n\r\nconst formatNumber = (number) =>\r\n    number.split(\"\").reduce((previousValue, currentValue, currentIndex) => {\r\n        if (currentIndex !== 0 && (currentIndex % 4 === 0)) {\r\n            previousValue += \" \";\r\n        }\r\n        return previousValue + currentValue\r\n    }, '');\r\n\r\n\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'usernameInput': {\r\n            return {\r\n                ...state, username: action.value,\r\n                usernameIsValid: action.value.length > 0\r\n            }\r\n        }\r\n        case 'cardNumber': {\r\n            const value = formatNumber(action.value.replace(/\\D/g, ''))\r\n            return {\r\n                ...state, cardNumber: value,\r\n                cardNumberIsValid: value.length === 19 || null\r\n            }\r\n        }\r\n        case 'expMonth': {\r\n            let value = action.value.replace(/\\D/g, '')\r\n            if (parseInt(value) > 12) {\r\n                value = ''\r\n            }\r\n            return {\r\n                ...state, expMonth: value,\r\n                expMonthIsValid: value > 0 || null\r\n            }\r\n        }\r\n        case 'expYear': {\r\n            let value = action.value.replace(/\\D/g, '')\r\n            return {\r\n                ...state, expYear: value,\r\n                expYearIsValid: (parseInt(value) > 0 && value.length === 2) || null\r\n            }\r\n        }\r\n        case 'cvc': {\r\n            return {\r\n                ...state, cvc: action.value.replace(/\\D/g, ''),\r\n                cvcIsValid: action.value.length === 3 || null\r\n            }\r\n        }\r\n        case 'validate-username': {\r\n            return {\r\n                ...state, usernameIsValid: (state.username.length > 0)\r\n            }\r\n        }\r\n        case 'validate-cardNumber': {\r\n            return {\r\n                ...state, cardNumberIsValid: (state.cardNumber.length === 19)\r\n            }\r\n        }\r\n        case 'validate-expMonth': {\r\n            return {\r\n                ...state, expMonthIsValid: (state.expMonth > 0 && state.expMonth <= 12)\r\n            }\r\n        }\r\n        case 'validate-expYear': {\r\n            return {\r\n                ...state, expYearIsValid: (state.expYear > 0 && state.expYear.length === 2)\r\n            }\r\n        }\r\n        case 'validate-cvc': {\r\n            return {\r\n                ...state, cvcIsValid: (state.cvc > 0 && state.cvc.length === 3)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Form = props => {\r\n\r\n    const [formState, dispatchFormAction] = useReducer(formReducer, initialState)\r\n    const usernameInputRef = useRef()\r\n    const cardNumberInputRef = useRef()\r\n    const expMonthInputRef = useRef()\r\n    const expYearInputRef = useRef()\r\n    const cvcInputRef = useRef()\r\n\r\n    const usernameChangeHandler = () => {\r\n        console.log('username changed')\r\n        dispatchFormAction({ type: 'usernameInput', value: usernameInputRef.current.value })\r\n    }\r\n\r\n    const cardNumberChangeHandler = () => {\r\n        console.log('cardnumber changed')\r\n        dispatchFormAction({ type: 'cardNumber', value: cardNumberInputRef.current.value })\r\n    }\r\n\r\n    const expMonthChangeHandler = () => {\r\n        dispatchFormAction({ type: 'expMonth', value: expMonthInputRef.current.value })\r\n    }\r\n\r\n    const expYearChangeHandler = () => {\r\n        dispatchFormAction({ type: 'expYear', value: expYearInputRef.current.value })\r\n    }\r\n\r\n    const cvcChangeHandler = () => {\r\n        dispatchFormAction({ type: 'cvc', value: cvcInputRef.current.value })\r\n    }\r\n\r\n    const handleBlur = (event) => {\r\n        dispatchFormAction({ type: `validate-${event.target.id}` })\r\n    }\r\n\r\n\r\n    const formSubmitHandler = event => {\r\n        event.preventDefault()\r\n        if (!formState.usernameIsValid) {\r\n            return usernameInputRef.current.focus()\r\n        }\r\n        if (!formState.cardNumberIsValid) {\r\n            return cardNumberInputRef.current.focus()\r\n        }\r\n        if (!formState.expMonthIsValid) {\r\n            return expMonthInputRef.current.focus()\r\n        }\r\n        if (!formState.expYearIsValid) {\r\n            return expYearInputRef.current.focus()\r\n        }\r\n        if (!formState.cvcIsValid) {\r\n            return cvcInputRef.current.focus()\r\n        }\r\n        props.onCompletion(true)\r\n\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            props.submitData(formState)\r\n        }, [formState, props]\r\n    );\r\n\r\n    return (\r\n        <form onSubmit={formSubmitHandler} className={styles.form}>\r\n            <div>\r\n                <label htmlFor=\"username\">cardholder name</label>\r\n                <input\r\n                    className={formState.usernameIsValid === false && styles.error}\r\n                    ref={usernameInputRef}\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    maxLength=\"30\"\r\n                    onChange={usernameChangeHandler}\r\n                    onBlur={handleBlur}\r\n                    value={formState.username}\r\n                    placeholder=\"e.g. Jane Appleseed\"\r\n                />\r\n                <Error isValid={formState.usernameIsValid} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"cardNumber\">card number</label>\r\n                <input\r\n                    className={formState.cardNumberIsValid === false && styles.error}\r\n                    ref={cardNumberInputRef}\r\n                    type=\"text\"\r\n                    id=\"cardNumber\"\r\n                    maxLength=\"19\"\r\n                    onChange={cardNumberChangeHandler}\r\n                    onBlur={handleBlur}\r\n                    value={formState.cardNumber}\r\n                    placeholder=\"e.g. 1234 5678 9123 0000\"\r\n                />\r\n                <Error isValid={formState.cardNumberIsValid} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"expMonth\">Expiry date</label>\r\n                <div>\r\n                    <input\r\n                        className={formState.expMonthIsValid === false && styles.error}\r\n                        ref={expMonthInputRef}\r\n                        type=\"text\"\r\n                        id=\"expMonth\"\r\n                        maxLength=\"2\"\r\n                        onChange={expMonthChangeHandler}\r\n                        onBlur={handleBlur}\r\n                        value={formState.expMonth}\r\n                        placeholder=\"MM\"\r\n                    />\r\n                    <input\r\n                        className={formState.expYearIsValid === false && styles.error}\r\n                        ref={expYearInputRef}\r\n                        type=\"text\"\r\n                        id=\"expYear\"\r\n                        maxLength=\"2\"\r\n                        onChange={expYearChangeHandler}\r\n                        onBlur={handleBlur}\r\n                        value={formState.expYear}\r\n                        placeholder=\"YY\"\r\n                    />\r\n                </div>\r\n                <Error isValid={formState.expMonthIsValid && formState.expYearIsValid} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"cvc\">cvc</label>\r\n                <input\r\n                    className={formState.cvcIsValid === false && styles.error}\r\n                    ref={cvcInputRef}\r\n                    type=\"text\"\r\n                    id=\"cvc\"\r\n                    maxLength=\"3\"\r\n                    onChange={cvcChangeHandler}\r\n                    onBlur={handleBlur}\r\n                    value={formState.cvc}\r\n                    placeholder=\"e.g. 123\"\r\n                />\r\n                <Error isValid={formState.cvcIsValid} />\r\n            </div>\r\n\r\n            <button>Confirm</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/card-logo.8ca90365.svg\";","import logo from '../../images/card-logo.svg';\r\n\r\nimport styles from './Card.module.css'\r\nconst Front = props => {\r\n    return (\r\n        <div className={styles['card-front']}>\r\n            <img src={logo} alt=\"logo\" />\r\n            <p>{props.data.cardNumber || '0000 0000 0000 0000'}</p>\r\n            <p>{props.data.username || 'Jane Appleseed'}</p>\r\n            <p>{props.data.expMonth || '00'}/{props.data.expYear || '00'} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Front;","import styles from './Card.module.css'\r\n\r\nconst Back = props => {\r\n    return (\r\n        <div className={styles['card-back']}>\r\n            <p>{props.data || '000'}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Back;","export default __webpack_public_path__ + \"static/media/icon-complete.8fd757c0.svg\";","import styles from './Complete.module.css'\r\nimport logo from '../../images/icon-complete.svg'\r\nconst Complete = props => {\r\n    const handleClick = () => {\r\n        props.onCompletion(false)\r\n\r\n    }\r\n    return (\r\n        <div className={styles.confirmed}>\r\n            <img src={logo} alt=\"completed\" />\r\n            <h1>Thank you!</h1>\r\n            <p>We've added your card details</p>\r\n            <button onClick={handleClick}>Continue</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Complete;","import { useState } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport Front from \"./components/Card/Front\";\nimport Back from \"./components/Card/Back\";\nimport Complete from \"./components/Complete/Complete\";\n\nfunction App() {\n  const [isComplete, setIsComplete] = useState(false)\n  const [cardDetails, setCardDetails] = useState({\n    username: 'jane',\n    cardNumber: '0000 0000 0000 0000',\n    expMonth: '00',\n    expYear: '00',\n    cvc: '000'\n  })\n\n  const handleCompletion = (value) => {\n    setIsComplete(value)\n  }\n\n  const formDataHandler = data => {\n    setCardDetails(data)\n  }\n\n  return (\n    <main>\n      <div className=\"card-container\">\n        <Front data={cardDetails} />\n        <Back data={cardDetails.cvc} />\n      </div>\n      <div className=\"form-container\">\n        {\n          isComplete ?\n            <Complete onCompletion={handleCompletion} /> :\n            <Form onCompletion={handleCompletion} submitData={formDataHandler} />\n        }</div>\n    </main>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Form_error__2ZwuW\",\"form\":\"Form_form__1zRvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-front\":\"Card_card-front__EstlR\",\"card-back\":\"Card_card-back__3TuZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2Ym5D\",\"noError\":\"Error_noError__2XGTI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmed\":\"Complete_confirmed__1KZm-\"};"],"sourceRoot":""}