{"version":3,"sources":["components/Complete/Complete.module.css","components/Form/Error.js","components/Form/Form.js","images/card-logo.svg","components/Card/Front.js","components/Card/Back.js","images/icon-complete.svg","components/Complete/Complete.js","App.js","index.js","components/Form/Form.module.css","components/Card/Card.module.css","components/Form/Error.module.css"],"names":["module","exports","Error","props","className","isValid","styles","error","noError","initialState","username","cardNumber","expMonth","expYear","cvc","usernameIsValid","cardNumberIsValid","expMonthIsValid","expYearIsValid","cvcIsValid","formReducer","state","action","type","value","length","replace","split","reduce","previousValue","currentValue","currentIndex","parseInt","Form","useReducer","formState","dispatchFormAction","changeHandler","event","target","id","blurHandler","useEffect","submitData","onSubmit","preventDefault","focus","onCompletion","form","htmlFor","maxLength","onChange","onBlur","placeholder","Front","src","logo","alt","data","Back","Complete","confirmed","onClick","App","useState","isComplete","setIsComplete","cardDetails","setCardDetails","handleCompletion","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.36c00194.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmed\":\"Complete_confirmed__1KZm-\"};","import styles from './Error.module.css'\r\n\r\nconst Error = props => {\r\n    return (\r\n        <p className={props.isValid === false ? styles.error : styles.noError}>Incomplete</p>\r\n    )\r\n}\r\n\r\nexport default Error;","import { useEffect, useReducer } from \"react\";\r\nimport styles from './Form.module.css'\r\nimport Error from './Error'\r\n\r\nconst initialState = {\r\n    username: '',\r\n    cardNumber: '',\r\n    expMonth: '',\r\n    expYear: '',\r\n    cvc: '',\r\n    usernameIsValid: null,\r\n    cardNumberIsValid: null,\r\n    expMonthIsValid: null,\r\n    expYearIsValid: null,\r\n    cvcIsValid: null,\r\n}\r\n\r\nconst formatNumber = (number) =>\r\n    number.split(\"\").reduce((previousValue, currentValue, currentIndex) => {\r\n        if (currentIndex !== 0 && (currentIndex % 4 === 0)) {\r\n            previousValue += \" \";\r\n        }\r\n        return previousValue + currentValue\r\n    }, '');\r\n\r\n\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'usernameInput': {\r\n            return {\r\n                ...state, username: action.value,\r\n                usernameIsValid: action.value.length > 0\r\n            }\r\n        }\r\n        case 'cardNumberInput': {\r\n            const value = formatNumber(action.value.replace(/\\D/g, ''))\r\n            return {\r\n                ...state, cardNumber: value,\r\n                cardNumberIsValid: value.length === 19 || null\r\n            }\r\n        }\r\n        case 'expMonthInput': {\r\n            let value = action.value.replace(/\\D/g, '')\r\n            if (parseInt(value) > 12) {\r\n                value = ''\r\n            }\r\n            return {\r\n                ...state, expMonth: value,\r\n                expMonthIsValid: value > 0 || null\r\n            }\r\n        }\r\n        case 'expYearInput': {\r\n            let value = action.value.replace(/\\D/g, '')\r\n            return {\r\n                ...state, expYear: value,\r\n                expYearIsValid: (parseInt(value) > 0 && value.length === 2) || null\r\n            }\r\n        }\r\n        case 'cvcInput': {\r\n            return {\r\n                ...state, cvc: action.value.replace(/\\D/g, ''),\r\n                cvcIsValid: action.value.length === 3 || null\r\n            }\r\n        }\r\n        case 'validate-username': {\r\n            return {\r\n                ...state, usernameIsValid: (state.username.length > 0)\r\n            }\r\n        }\r\n        case 'validate-cardNumber': {\r\n            return {\r\n                ...state, cardNumberIsValid: (state.cardNumber.length === 19)\r\n            }\r\n        }\r\n        case 'validate-expMonth': {\r\n            return {\r\n                ...state, expMonthIsValid: (state.expMonth > 0 && state.expMonth <= 12)\r\n            }\r\n        }\r\n        case 'validate-expYear': {\r\n            return {\r\n                ...state, expYearIsValid: (state.expYear > 0 && state.expYear.length === 2)\r\n            }\r\n        }\r\n        case 'validate-cvc': {\r\n            return {\r\n                ...state, cvcIsValid: (state.cvc > 0 && state.cvc.length === 3)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Form = props => {\r\n\r\n    const [formState, dispatchFormAction] = useReducer(formReducer, initialState)\r\n\r\n    const changeHandler = event => {\r\n        dispatchFormAction({ type: `${event.target.id}Input`, value: event.target.value })\r\n    }\r\n\r\n    const blurHandler = (event) => {\r\n        dispatchFormAction({ type: `validate-${event.target.id}` })\r\n    }\r\n\r\n    const formSubmitHandler = event => {\r\n        event.preventDefault()\r\n        for (let target of event.target) {\r\n            if (target.id && !formState[`${target.id}IsValid`]) {\r\n                return target.focus()\r\n            }\r\n        }\r\n        props.onCompletion(true)\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            props.submitData(formState)\r\n        }, [formState, props]\r\n    );\r\n\r\n    return (\r\n        <form onSubmit={formSubmitHandler} className={styles.form}>\r\n            <div>\r\n                <label htmlFor=\"username\">cardholder name</label>\r\n                <input\r\n                    className={formState.usernameIsValid === false && styles.error}\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    maxLength=\"30\"\r\n                    onChange={changeHandler}\r\n                    onBlur={blurHandler}\r\n                    value={formState.username}\r\n                    placeholder=\"e.g. Jane Appleseed\"\r\n                />\r\n                <Error isValid={formState.usernameIsValid} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"cardNumber\">card number</label>\r\n                <input\r\n                    className={formState.cardNumberIsValid === false && styles.error}\r\n                    type=\"text\"\r\n                    id=\"cardNumber\"\r\n                    maxLength=\"19\"\r\n                    onChange={changeHandler}\r\n                    onBlur={blurHandler}\r\n                    value={formState.cardNumber}\r\n                    placeholder=\"e.g. 1234 5678 9123 0000\"\r\n                />\r\n                <Error isValid={formState.cardNumberIsValid} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"expMonth\">Expiry date</label>\r\n                <div>\r\n                    <input\r\n                        className={formState.expMonthIsValid === false && styles.error}\r\n                        type=\"text\"\r\n                        id=\"expMonth\"\r\n                        maxLength=\"2\"\r\n                        onChange={changeHandler}\r\n                        onBlur={blurHandler}\r\n                        value={formState.expMonth}\r\n                        placeholder=\"MM\"\r\n                    />\r\n                    <input\r\n                        className={formState.expYearIsValid === false && styles.error}\r\n                        type=\"text\"\r\n                        id=\"expYear\"\r\n                        maxLength=\"2\"\r\n                        onChange={changeHandler}\r\n                        onBlur={blurHandler}\r\n                        value={formState.expYear}\r\n                        placeholder=\"YY\"\r\n                    />\r\n                </div>\r\n                <Error isValid={formState.expMonthIsValid && formState.expYearIsValid} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"cvc\">cvc</label>\r\n                <input\r\n                    className={formState.cvcIsValid === false && styles.error}\r\n                    type=\"text\"\r\n                    id=\"cvc\"\r\n                    maxLength=\"3\"\r\n                    onChange={changeHandler}\r\n                    onBlur={blurHandler}\r\n                    value={formState.cvc}\r\n                    placeholder=\"e.g. 123\"\r\n                />\r\n                <Error isValid={formState.cvcIsValid} />\r\n            </div>\r\n\r\n            <button>Confirm</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/card-logo.8ca90365.svg\";","import logo from '../../images/card-logo.svg';\r\n\r\nimport styles from './Card.module.css'\r\nconst Front = props => {\r\n    return (\r\n        <div className={styles['card-front']}>\r\n            <img src={logo} alt=\"logo\" />\r\n            <p>{props.data.cardNumber || '0000 0000 0000 0000'}</p>\r\n            <p>{props.data.username || 'Jane Appleseed'}</p>\r\n            <p>{props.data.expMonth || '00'}/{props.data.expYear || '00'} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Front;","import styles from './Card.module.css'\r\n\r\nconst Back = props => {\r\n    return (\r\n        <div className={styles['card-back']}>\r\n            <p>{props.data || '000'}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Back;","export default __webpack_public_path__ + \"static/media/icon-complete.8fd757c0.svg\";","import styles from './Complete.module.css'\r\nimport logo from '../../images/icon-complete.svg'\r\nconst Complete = props => {\r\n    const handleClick = () => {\r\n        props.onCompletion(false)\r\n\r\n    }\r\n    return (\r\n        <div className={styles.confirmed}>\r\n            <img src={logo} alt=\"completed\" />\r\n            <h1>Thank you!</h1>\r\n            <p>We've added your card details</p>\r\n            <button onClick={handleClick}>Continue</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Complete;","import { useState } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport Front from \"./components/Card/Front\";\nimport Back from \"./components/Card/Back\";\nimport Complete from \"./components/Complete/Complete\";\n\nfunction App() {\n  const [isComplete, setIsComplete] = useState(false)\n  const [cardDetails, setCardDetails] = useState({\n    username: 'jane',\n    cardNumber: '0000 0000 0000 0000',\n    expMonth: '00',\n    expYear: '00',\n    cvc: '000'\n  })\n\n  const handleCompletion = (value) => {\n    setIsComplete(value)\n  }\n\n  const formDataHandler = data => {\n    setCardDetails(data)\n  }\n\n  return (\n    <main>\n      <div className=\"card-container\">\n        <Front data={cardDetails} />\n        <Back data={cardDetails.cvc} />\n      </div>\n      <div className=\"form-container\">\n        {\n          isComplete ?\n            <Complete onCompletion={handleCompletion} /> :\n            <Form onCompletion={handleCompletion} submitData={formDataHandler} />\n        }</div>\n    </main>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Form_error__2ZwuW\",\"form\":\"Form_form__1zRvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-front\":\"Card_card-front__EstlR\",\"card-back\":\"Card_card-back__3TuZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2Ym5D\",\"noError\":\"Error_noError__2XGTI\"};"],"sourceRoot":""}